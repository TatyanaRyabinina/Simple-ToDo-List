{"code":"webpackHotUpdate(0,[,,,,!1,,,,,,!1,!1,,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,,,!1,!1,!1,!1,!1,,,,!1,!1,!1,!1,!1,!1,!1,!1,!1,,,,,,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,,,,,,,,,,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,a){throw new Error(\"Module parse failed: Invalid regular expression: /+[a-zA-Z]+$/: Nothing to repeat (14:70)\\nYou may need an appropriate loader to handle this file type.\\n| \\n| var validationSchema = Yup.object().shape({\\n>   newToDo: Yup.string().required('ToDo is required!').min(5).matches(/+[a-zA-Z]+$/)\\n|   //.matches(/[a-zA-Z]/)\\n|   //.matches(/[^(@#$%&^*!`)]/) ///^[a-zA-Z0-9]/)\")},!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1,!1]);","extractedComments":[]}